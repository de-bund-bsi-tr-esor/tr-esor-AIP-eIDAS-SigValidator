server.info=The aip-validator includes multiple functions which can be executed. Those functions are\: finding signatures, verify signatures, validating an XAIP. Those functions can be used by passing the corresponding option. Finding and verifying signatures can be applied to different validation targets which are listed below. When no function is selected the XAIP will only be validated. Using one of the other functions already includes the XAIP validation. Validation targets\: a - ASiC, c - CAdES, p - PAdES, t - TSP, x - XAdES
server.keystore=Path to the sslKeystore for https
server.keystore.pass=Password for the keyStore pass
server.usage.config=Passing a configuration file in form of a property file to the validator. This file can contain any module configuration property. The configuration file is being passed to every module so they can scan the content and retrieve any configuration properties they define. \n\n      The handling is just the same as passing all configuration properties via a separate command line argument.\n\n      This argument can also be used together with single command line module property arguments.\n\n      Example\:    -c config.properties\n\n      Content of config.properties\:\n  validator.schemaDir\=/tmp/xaip/definition\n  verifier.wsdlUrl\=http\://localhost\:8080/s4?wsdl\n
server.verbose=Printing detailed informations about the steps being executed while processing the command.
server.name=java -jar xaip-validator-cli.jar
server.port=Port number which should be used to publish the SOAP service. If this argument is being omitted, the default port of 8080 will be used instead.
server.help=Printing this help page.
server.path=Path to the service. If this argument is being omitted, the path /xaip-validate will be used.
server.protocol=Protocol which is being used. Omitting this argument will use http.
server.host=Name of the host the service will be published to. When omitted, localhost will be used.

